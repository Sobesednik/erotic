{"version":3,"sources":["../src/index.js"],"names":["erotic","transparent","stack","Error","caller","arguments","entryStack"],"mappings":"uFAAA;;;AAGA;;AAEA;;;;;AAKe,SAASA,MAAT,CAAgBC,WAAhB,EAA6B;AAC1C,QAAM,EAAEC,KAAF,KAAY,IAAIC,KAAJ,EAAlB;AACA,QAAMC,SAAS,iCAAuBC,SAAvB,CAAf;AACA,QAAMC,aAAa,wBAAcJ,KAAd,EAAqBD,WAArB,CAAnB;;AAEA,SAAO,4BAAaG,MAAb,EAAqBE,UAArB,EAAiCL,WAAjC,CAAP;AACD","sourcesContent":["import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Call this method to get a function that will return an error with a stack\n * trace starting at the line in code when the call was made.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}\n"],"file":"index.js"}